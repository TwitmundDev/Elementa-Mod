plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'java'
}

group = 'ElementaMod'
version = '1.0-SNAPSHOT'

shadowJar {
    configurations = [project.configurations.shadow]
}

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        url "https://repo.dmulloy2.net/repository/public/"
    }

    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

}

shadowJar {
    configurations = [project.configurations.shadow]
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    compileOnly 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot:1.12.2-R0.1-SNAPSHOT'
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.7.0";
    shadow 'org.postgresql:postgresql:42.3.6'
    shadow 'org.apache.commons:commons-dbcp2:2.9.0'
    shadow group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    //shadow(group: "org.apache.commons", name: "commons-dbcp2",version: "2.9.0")
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }

    compileJava.options.encoding = 'UTF-8'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

}

